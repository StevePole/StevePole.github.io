{
    "apiVersion": "1",
    "basePath": "https://oauth.alchemysocial.com",
    "apis": [
        {
            "operations": [
                {
                    "parameters": [
                        {
                            "name": "grant_type",
                            "description": "For 2-legged login this should be 'password', it can also be refresh_token if refreshing the token.  authorization_code is only used for 3-legged auth.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "password",
                                "refresh_token",
                                "authorization_code"
                            ],
                            "format": "string",
                            "isId": true,
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_secret",
                            "description": "Secret key of the client application",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_id",
                            "description": "The client id.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "username",
                            "description": "The username, only used for password grant_type.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "password",
                            "description": "The users password, only used for password grant_type.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "refresh_token",
                            "description": "Only used if grant_type is refresh_token.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "code",
                            "description": "The code supplied from the redirect request, only used when grant type is authorization_code.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "redirect_uri",
                            "description": "The redirect_uri must match the redirect URI in the login request. Only used when grant type is authorization_code.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "getClaims",
                            "description": "Option to return claims data, filtered for this access_token, alongside the response.",
                            "type": "void",
                            "required": false,
                            "format": "void",
                            "expectedInResponses": false,
                            "paramType": "body"
                        }
                    ],
                    "method": "POST",
                    "summary": "Create an auth token",
                    "notes": "",
                    "requiresAuth": false,
                    "hidden": false,
                    "disabled": false,
                    "type": "token",
                    "$ref": "token",
                    "postDataModel": "tokenRequest"
                }
            ],
            "path": "/token",
            "description": "Create an auth token for future requests",
            "parentModel": "tokenRequest",
            "pathUsesChildId": false
        },
        {
            "path": "/acl",
            "operations": [
                {
                    "method": "POST",
                    "type": "string",
                    "parameters": [
                        {
                            "name": "username",
                            "description": "The email address of the user",
                            "type": "string",
                            "required": false,
                            "isId": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "blob",
                            "description": "The ACL object you wish to create.",
                            "type": "acl",
                            "required": false,
                            "$ref": "acl",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_id",
                            "description": "The id of the client application.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_secret",
                            "description": "Secret key for the client application.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Create a new ACL for a user",
                    "notes": "",
                    "nickname": "",
                    "requiresAuth": false,
                    "postDataModel": "aclResponse",
                    "format": "string"
                },
                {
                    "method": "GET",
                    "type": "array",
                    "parameters": [
                        {
                            "name": "username",
                            "description": "The username who's acl information we're requesting",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        },
                        {
                            "name": "client_id",
                            "description": "The id of the calling application",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        },
                        {
                            "name": "client_secret",
                            "description": "The secret key for  the calling application",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Get the ACLs for a user",
                    "notes": "",
                    "nickname": "",
                    "requiresAuth": false,
                    "items": {
                        "type": "aclResponse",
                        "$ref": "aclResponse"
                    }
                }
            ],
            "parentModel": "aclResponse",
            "description": "Create, Get and Update ACLs for users.",
            "pathUsesChildId": false
        },
        {
            "path": "/token/validate",
            "operations": [
                {
                    "method": "POST",
                    "type": "tokenValidate",
                    "parameters": [
                        {
                            "name": "client_id",
                            "description": "The id of the client application.",
                            "type": "string",
                            "required": true,
                            "isId": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_secret",
                            "description": "Secret key for the client application.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "access_token",
                            "description": "The users access token.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "getClaims",
                            "description": "Option to return claims data, filtered for this access_token, alongside the response.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Validate a token and returns information on who the user is.",
                    "notes": "",
                    "nickname": "",
                    "requiresAuth": false,
                    "$ref": "tokenValidate",
                    "postDataModel": "tokenValidate"
                }
            ],
            "description": "Validate a token and find out who the user is.",
            "parentModel": "tokenRequest",
            "pathUsesChildId": false
        },
        {
            "path": "/user/create",
            "operations": [
                {
                    "method": "POST",
                    "type": "user",
                    "parameters": [
                        {
                            "name": "username",
                            "description": "Email address of the user",
                            "type": "string",
                            "format": "string",
                            "required": true,
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "password",
                            "description": "Optionally supply a password when creating user.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_id",
                            "description": "The id of the client application.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_secret",
                            "description": "Secret key for the client application.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Create a user",
                    "notes": "",
                    "nickname": "",
                    "requiresAuth": false,
                    "postDataModel": "user",
                    "$ref": "user"
                }
            ],
            "description": "Create a user",
            "pathUsesChildId": false
        },
        {
            "path": "/user/changepassword",
            "operations": [
                {
                    "method": "POST",
                    "type": "user",
                    "parameters": [
                        {
                            "name": "username",
                            "description": "Email address of the user",
                            "type": "string",
                            "format": "string",
                            "required": true,
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "password",
                            "description": "Optionally supply a password when creating user.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_id",
                            "description": "The id of the client application.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_secret",
                            "description": "Secret key for the client application.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Change a users password.",
                    "notes": "",
                    "nickname": "",
                    "requiresAuth": false,
                    "postDataModel": "user",
                    "$ref": "user"
                }
            ],
            "description": "Change a users password.",
            "pathUsesChildId": false
        },
        {
            "path": "/user/checkpassword",
            "operations": [
                {
                    "method": "POST",
                    "type": "user",
                    "parameters": [
                        {
                            "name": "username",
                            "description": "Email address of the user",
                            "type": "string",
                            "format": "string",
                            "required": true,
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "password",
                            "description": "Optionally supply a password when creating user.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_id",
                            "description": "The id of the client application.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_secret",
                            "description": "Secret key for the client application.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Check a users password",
                    "notes": "",
                    "nickname": "",
                    "requiresAuth": false,
                    "postDataModel": "user",
                    "$ref": "user"
                }
            ],
            "description": "Check a users password",
            "pathUsesChildId": false
        },
        {
            "path": "/user/exists",
            "operations": [
                {
                    "method": "POST",
                    "type": "boolean",
                    "parameters": [
                        {
                            "name": "username",
                            "description": "Email address of the user",
                            "type": "string",
                            "format": "string",
                            "required": true,
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "password",
                            "description": "Optionally supply a password when creating user.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_id",
                            "description": "The id of the client application.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_secret",
                            "description": "Secret key for the client application.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Check if a username exists.",
                    "notes": "",
                    "nickname": "",
                    "requiresAuth": false,
                    "postDataModel": "user",
                    "format": "boolean"
                }
            ],
            "description": "Check if a username exists.",
            "pathUsesChildId": false
        },
        {
            "path": "/user/find-by-acl",
            "operations": [
                {
                    "method": "GET",
                    "type": "array",
                    "parameters": [
                        {
                            "name": "client_id",
                            "description": "The id of the client application.",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        },
                        {
                            "name": "client_resource",
                            "description": "Secret key for the client application.",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        },
                        {
                            "name": "namespace",
                            "description": "The namespace of the acl e.g. com.alchemysocial",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        },
                        {
                            "name": "resource",
                            "description": "The resource of the acl",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        },
                        {
                            "name": "object",
                            "description": "Search for acls against a certain object",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        },
                        {
                            "name": "privilege",
                            "description": "Search for acls with a certain privilege",
                            "required": false,
                            "type": "array",
                            "paramType": "query",
                            "items": {
                                "type": "string",
                                "format": "string"
                            }
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Returns the users who have access to certain ACL",
                    "notes": "",
                    "nickname": "",
                    "requiresAuth": false,
                    "items": {
                        "type": "user",
                        "$ref": "user"
                    },
                    "disabled": false
                }
            ],
            "description": "Returns the users who have access to certain ACL.  This end point is can only be accessed by a client with is_primary.",
            "pathUsesChildId": false
        },
        {
            "path": "/tag",
            "operations": [
                {
                    "method": "POST",
                    "type": "tag",
                    "parameters": [
                        {
                            "name": "username",
                            "description": "The email address of the user",
                            "type": "string",
                            "required": false,
                            "isId": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "blob",
                            "description": "The tag object you wish to create.",
                            "type": "tag",
                            "required": false,
                            "$ref": "tag",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_id",
                            "description": "The id of the client application.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_secret",
                            "description": "Secret key for the client application.",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Create a new tag",
                    "notes": "",
                    "nickname": "",
                    "requiresAuth": true,
                    "postDataModel": "tagResponse",
                    "$ref": "tag"
                },
                {
                    "method": "GET",
                    "type": "tagResponse",
                    "parameters": [
                        {
                            "name": "username",
                            "description": "The username who's acl information we're requesting",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        },
                        {
                            "name": "client_id",
                            "description": "The id of the calling application",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        },
                        {
                            "name": "client_secret",
                            "description": "The secret key for  the calling application",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Get the tags for a user",
                    "notes": "",
                    "nickname": "",
                    "requiresAuth": true,
                    "$ref": "tagResponse"
                }
            ],
            "parentModel": "tagResponse",
            "description": "Get the tags for a user. This method can be used in two ways: by passing an access token in the url, or by passing username, client_id and client_secret.",
            "pathUsesChildId": false
        },
        {
            "path": "/client",
            "operations": [
                {
                    "method": "POST",
                    "type": "client",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "The id of the client.",
                            "type": "string",
                            "required": true,
                            "isId": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "secret",
                            "description": "The client secret for this client",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_id",
                            "description": "The id of the client application.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_secret",
                            "description": "Secret key for the client application.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "token_type",
                            "description": "defaults to basic",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "basic",
                                "publickey",
                                "json"
                            ],
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "public_key",
                            "description": "Public key PEM.  REQUIRED if token_type = publickey",
                            "type": "string",
                            "required": false,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "key_fields",
                            "description": "Extra fields in JSON type tokens.",
                            "type": "json",
                            "required": false,
                            "$ref": "json",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "read_namespace",
                            "description": "Array of regexes of namespaces the application can read.",
                            "type": "array",
                            "required": false,
                            "items": {
                                "type": "string",
                                "format": "string"
                            },
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "write_namespace",
                            "description": "Array of regexes of namespaces the application can write to.",
                            "type": "array",
                            "required": false,
                            "items": {
                                "type": "string",
                                "format": "string"
                            },
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "is_primary",
                            "description": "Is this an app a user can log into directly, rather than using an API",
                            "type": "boolean",
                            "required": false,
                            "format": "boolean",
                            "expectedInResponses": false,
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Create a client",
                    "notes": "",
                    "nickname": "",
                    "requiresAuth": false,
                    "postDataModel": "client",
                    "$ref": "client"
                },
                {
                    "method": "GET",
                    "type": "client",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "The client to get or update.",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        },
                        {
                            "name": "client_id",
                            "description": "The id of the client application.",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        },
                        {
                            "name": "client_secret",
                            "description": "Secret key for the client application.",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Get a single client.",
                    "notes": "",
                    "nickname": "",
                    "requiresAuth": false,
                    "$ref": "client"
                }
            ],
            "parentModel": "client",
            "description": "Get, create and update oauth clients. This end point is only accessible if you are accessing through a client with the 'can_add_client' permission.",
            "pathUsesChildId": false
        },
        {
            "path": "/clients",
            "operations": [
                {
                    "method": "GET",
                    "type": "array",
                    "parameters": [
                        {
                            "name": "client_id",
                            "description": "The id of the client application.",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        },
                        {
                            "name": "client_secret",
                            "description": "Secret key for the client application.",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "format": "string"
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Get the list of clients in the server.",
                    "notes": "",
                    "nickname": "",
                    "requiresAuth": false,
                    "items": {
                        "type": "client",
                        "$ref": "client"
                    }
                }
            ],
            "parentModel": "client",
            "description": "Get the list of clients in the server.  This end point is only accessible if you are accessing through a client with the 'can_add_client' permission.",
            "pathUsesChildId": false
        },
        {
            "path": "/token/invalidate",
            "operations": [
                {
                    "method": "POST",
                    "type": "string",
                    "parameters": [
                        {
                            "name": "client_id",
                            "description": "The id of the client application.",
                            "type": "string",
                            "required": true,
                            "isId": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "client_secret",
                            "description": "Secret key for the client application.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        },
                        {
                            "name": "access_token",
                            "description": "The users access token.",
                            "type": "string",
                            "required": true,
                            "format": "string",
                            "expectedInResponses": false,
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [],
                    "summary": "Invalidates a token.",
                    "notes": "Returns \"true\" if token is invalidated correctly, \"false\" if not.",
                    "nickname": "",
                    "requiresAuth": false,
                    "postDataModel": "tokenInvalidate",
                    "format": "string"
                }
            ],
            "description": "Invalidates a token.",
            "pathUsesChildId": false,
            "parentModel": "tokenRequest"
        }
    ],
    "models": {
        "error": {
            "id": "error",
            "properties": {
                "error": {
                    "name": "error",
                    "description": "Short name for the error",
                    "type": "string",
                    "format": "string",
                    "example": "invalid_client",
                    "required": false,
                    "requiredPut": false,
                    "isId": true,
                    "purpose": "name",
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "expectedInResponses": false
                },
                "error_description": {
                    "name": "error_description",
                    "description": "A human readable and client friendly error message",
                    "type": "string",
                    "format": "string",
                    "example": "invalid client credentials",
                    "required": false,
                    "requiredPut": false,
                    "purpose": "message",
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "expectedInResponses": false
                }
            },
            "required": [],
            "name": "error",
            "isError": true
        },
        "user": {
            "id": "user",
            "properties": {
                "user_id": {
                    "name": "user_id",
                    "description": "The id of the user",
                    "type": "string",
                    "format": "string",
                    "required": false,
                    "isId": true,
                    "requiredPut": false,
                    "example": "test@test.com",
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "expectedInResponses": false
                },
                "username": {
                    "name": "username",
                    "description": "Email address of the user",
                    "type": "string",
                    "format": "string",
                    "required": true,
                    "example": "test@test.com",
                    "usedInResponses": true,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "password": {
                    "name": "password",
                    "description": "Optionally supply a password when creating user.",
                    "type": "string",
                    "required": false,
                    "requiredPut": false,
                    "format": "string",
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "example": "p@$$w0rd!",
                    "expectedInResponses": false
                },
                "client_id": {
                    "name": "client_id",
                    "description": "The id of the client application.",
                    "type": "string",
                    "usedInPosts": true,
                    "usedInPuts": true,
                    "required": true,
                    "requiredPut": true,
                    "format": "string",
                    "usedInResponses": false,
                    "example": "10016b6ed5a5b09be08133fa2d282636",
                    "expectedInResponses": false
                },
                "client_secret": {
                    "name": "client_secret",
                    "description": "Secret key for the client application.",
                    "type": "string",
                    "usedInPosts": true,
                    "usedInPuts": true,
                    "required": true,
                    "requiredPut": true,
                    "format": "string",
                    "usedInResponses": false,
                    "example": "10016b6ed5a5b09be08133fa2d282636",
                    "expectedInResponses": false
                }
            },
            "required": [
                "username",
                "client_id",
                "client_secret"
            ],
            "name": "user"
        },
        "token": {
            "id": "token",
            "properties": {
                "access_token": {
                    "name": "access_token",
                    "description": "The access token",
                    "type": "string",
                    "format": "string",
                    "required": false,
                    "requiredPut": false,
                    "isId": true,
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "expectedInResponses": false
                },
                "expires_in": {
                    "name": "expires_in",
                    "description": "Number os seconds until token expires, using the token refreshed this value",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                    "requiredPut": false,
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "expectedInResponses": false
                },
                "token_type": {
                    "name": "token_type",
                    "description": "Always \"bearer\"",
                    "type": "string",
                    "format": "string",
                    "required": false,
                    "requiredPut": false,
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "expectedInResponses": false
                },
                "scope": {
                    "name": "scope",
                    "description": "The client id the access token relates to",
                    "type": "string",
                    "format": "string",
                    "required": false,
                    "requiredPut": false,
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "expectedInResponses": false
                },
                "refresh_token": {
                    "name": "refresh_token",
                    "description": "oAuth refresh token used for refreshing main token",
                    "type": "string",
                    "format": "string",
                    "required": false,
                    "requiredPut": false,
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "expectedInResponses": false
                },
                "acls": {
                    "name": "acls",
                    "description": "Dictionary of ACLs, key is the namespace of the ACL.  Ony returned if getClaims is specified in the request.",
                    "type": "aclNamespace",
                    "required": false,
                    "requiredPut": false,
                    "isDictionary": false,
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "$ref": "aclNamespace",
                    "expectedInResponses": false
                },
                "tags": {
                    "name": "tags",
                    "description": "Dictionary of tags, key is the namespace of the tag.  Ony returned if getClaims is specified in the request.",
                    "type": "tagNamespace",
                    "required": false,
                    "requiredPut": false,
                    "isDictionary": false,
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "$ref": "tagNamespace",
                    "expectedInResponses": false
                }
            },
            "required": [],
            "name": "token"
        },
        "tokenRequest": {
            "name": "tokenRequest",
            "properties": {
                "grant_type": {
                    "name": "grant_type",
                    "description": "For 2-legged login this should be 'password', it can also be refresh_token if refreshing the token.  authorization_code is only used for 3-legged auth.",
                    "type": "string",
                    "required": true,
                    "requiredPut": false,
                    "enum": [
                        "password",
                        "refresh_token",
                        "authorization_code"
                    ],
                    "example": "",
                    "format": "string",
                    "isId": true,
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "client_secret": {
                    "name": "client_secret",
                    "description": "Secret key of the client application",
                    "type": "string",
                    "required": true,
                    "requiredPut": false,
                    "example": "78d89wwdk3km32mk3km32lk32lk32",
                    "format": "string",
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "client_id": {
                    "name": "client_id",
                    "description": "The client id.",
                    "type": "string",
                    "required": true,
                    "requiredPut": false,
                    "example": "123456789",
                    "format": "string",
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "username": {
                    "name": "username",
                    "description": "The username, only used for password grant_type.",
                    "type": "string",
                    "required": false,
                    "requiredPut": false,
                    "example": "test@test.com",
                    "format": "string",
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "password": {
                    "name": "password",
                    "description": "The users password, only used for password grant_type.",
                    "type": "string",
                    "required": false,
                    "requiredPut": false,
                    "example": "32jh34sdjs",
                    "format": "string",
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "refresh_token": {
                    "name": "refresh_token",
                    "description": "Only used if grant_type is refresh_token.",
                    "type": "string",
                    "required": false,
                    "requiredPut": false,
                    "example": "",
                    "format": "string",
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "code": {
                    "name": "code",
                    "description": "The code supplied from the redirect request, only used when grant type is authorization_code.",
                    "type": "string",
                    "required": false,
                    "requiredPut": false,
                    "format": "string",
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "redirect_uri": {
                    "name": "redirect_uri",
                    "description": "The redirect_uri must match the redirect URI in the login request. Only used when grant type is authorization_code.",
                    "type": "string",
                    "required": false,
                    "requiredPut": false,
                    "format": "string",
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "getClaims": {
                    "name": "getClaims",
                    "description": "Option to return claims data, filtered for this access_token, alongside the response.",
                    "type": "void",
                    "required": false,
                    "requiredPut": false,
                    "format": "void",
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                }
            },
            "required": [
                "grant_type",
                "client_secret",
                "client_id"
            ],
            "id": "tokenRequest"
        },
        "acl": {
            "name": "acl",
            "properties": {
                "id": {
                    "name": "id",
                    "description": "The id of the ACL.",
                    "type": "string",
                    "required": false,
                    "requiredPut": false,
                    "isId": true,
                    "format": "string",
                    "example": "12345",
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "expectedInResponses": false
                },
                "resource": {
                    "name": "resource",
                    "description": "Resource type in consumer database",
                    "type": "string",
                    "required": true,
                    "requiredPut": false,
                    "example": "Channel",
                    "format": "string",
                    "usedInResponses": true,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "object": {
                    "name": "object",
                    "description": "Id of the object in the consumer database",
                    "type": "string",
                    "required": true,
                    "requiredPut": false,
                    "example": "d97fb4c74f60157faf0ccf6cc3b55359",
                    "format": "string",
                    "usedInResponses": true,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "privilege": {
                    "name": "privilege",
                    "description": "List of privilege types over the resource",
                    "type": "array",
                    "required": true,
                    "requiredPut": false,
                    "enum": [
                        "create",
                        "delete",
                        "edit",
                        "view"
                    ],
                    "items": {
                        "type": "string",
                        "format": "string"
                    },
                    "usedInResponses": true,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "namespace": {
                    "name": "namespace",
                    "description": "Namespace for this ACL",
                    "type": "string",
                    "required": true,
                    "requiredPut": false,
                    "example": "com.experian",
                    "format": "string",
                    "usedInResponses": true,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                }
            },
            "required": [
                "resource",
                "object",
                "privilege",
                "namespace"
            ],
            "id": "acl"
        },
        "tokenValidate": {
            "name": "tokenValidate",
            "properties": {
                "client_id": {
                    "name": "client_id",
                    "description": "The id of the client application.",
                    "type": "string",
                    "required": true,
                    "requiredPut": true,
                    "isId": true,
                    "example": "1234",
                    "format": "string",
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "client_secret": {
                    "name": "client_secret",
                    "description": "Secret key for the client application.",
                    "type": "string",
                    "required": true,
                    "requiredPut": true,
                    "example": "10016b6ed5a5b09be08133fa2d282636",
                    "format": "string",
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "access_token": {
                    "name": "access_token",
                    "description": "The users access token.",
                    "type": "string",
                    "required": true,
                    "requiredPut": false,
                    "example": "bb302c9b5204d593ba3657055842a5fb",
                    "format": "string",
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "success": {
                    "name": "success",
                    "description": "The id of the user who this token belongs to.",
                    "type": "tokenSuccess",
                    "required": false,
                    "requiredPut": false,
                    "format": "string",
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "expectedInResponses": false,
                    "$ref": "tokenSuccess"
                },
                "getClaims": {
                    "name": "getClaims",
                    "description": "Option to return claims data, filtered for this access_token, alongside the response.",
                    "type": "string",
                    "required": false,
                    "requiredPut": false,
                    "format": "string",
                    "usedInResponses": false,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "acls": {
                    "name": "acls",
                    "description": "Dictionary of ACLs, key is the namespace of the ACL.  Ony returned if getClaims is specified in the request.",
                    "type": "aclNamespace",
                    "required": false,
                    "requiredPut": false,
                    "isDictionary": false,
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "$ref": "aclNamespace",
                    "expectedInResponses": false
                },
                "tags": {
                    "name": "tags",
                    "description": "Dictionary of tags, key is the namespace of the tag.  Ony returned if getClaims is specified in the request.",
                    "type": "tagNamespace",
                    "required": false,
                    "requiredPut": false,
                    "isDictionary": false,
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "$ref": "tagNamespace",
                    "expectedInResponses": false
                }
            },
            "required": [
                "client_id",
                "client_secret",
                "access_token"
            ],
            "id": "tokenValidate"
        },
        "tag": {
            "name": "tag",
            "properties": {
                "id": {
                    "name": "id",
                    "description": "The id of the tag.",
                    "type": "string",
                    "required": false,
                    "requiredPut": false,
                    "isId": true,
                    "format": "string",
                    "usedInResponses": true,
                    "usedInPuts": false,
                    "usedInPosts": false,
                    "expectedInResponses": false
                },
                "name": {
                    "name": "name",
                    "description": "The name of the tag.",
                    "type": "string",
                    "required": false,
                    "requiredPut": false,
                    "format": "string",
                    "usedInResponses": true,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "value": {
                    "name": "value",
                    "description": "JSON blob",
                    "type": "json",
                    "required": false,
                    "requiredPut": false,
                    "$ref": "json",
                    "usedInResponses": true,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                },
                "namespace": {
                    "name": "namespace",
                    "description": "The namespace of the tag.",
                    "type": "string",
                    "required": false,
                    "requiredPut": false,
                    "example": "com.experian",
                    "format": "string",
                    "usedInResponses": true,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                }
            },
            "required": [],
            "id": "tag"
        },
        "json": {
            "name": "json",
            "properties": {
                "example": {
                    "name": "example",
                    "description": "This is just an example of what might be in a JSON blob",
                    "type": "string",
                    "required": false,
                    "requiredPut": false,
                    "isId": true,
                    "format": "string",
                    "usedInResponses": true,
                    "usedInPuts": true,
                    "usedInPosts": true,
                    "expectedInResponses": false
                }
            },
            "required": [],
            "id": "json"
        },
        "aclResponse": {
            "name": "aclResponse",
            "properties": {
                "username": {
                    "name": "username",
                    "description": "The email address of the user",
                    "type": "string",
                    "usedInResponses": true,
                    "usedInPosts": true,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "isId": true,
                    "example": "test@test.ccom",
                    "format": "string",
                    "expectedInResponses": false
                },
                "acl": {
                    "name": "acl",
                    "description": "Dictonary of namespaces mapping to an array of ACLs for that namespace.",
                    "type": "aclNamespace",
                    "usedInResponses": true,
                    "usedInPosts": false,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "isDictionary": false,
                    "$ref": "aclNamespace",
                    "expectedInResponses": false
                },
                "tag": {
                    "name": "tag",
                    "description": "Dictonary of namespaces mapping to an array of Tags for that namespace.",
                    "type": "tagNamespace",
                    "usedInResponses": true,
                    "usedInPosts": false,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "isDictionary": false,
                    "$ref": "tagNamespace",
                    "expectedInResponses": false
                },
                "blob": {
                    "name": "blob",
                    "description": "The ACL object you wish to create.",
                    "type": "acl",
                    "usedInResponses": false,
                    "usedInPosts": true,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "$ref": "acl",
                    "expectedInResponses": false
                },
                "client_id": {
                    "name": "client_id",
                    "description": "The id of the client application.",
                    "type": "string",
                    "usedInResponses": false,
                    "usedInPosts": true,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "example": "1234",
                    "format": "string",
                    "expectedInResponses": false
                },
                "client_secret": {
                    "name": "client_secret",
                    "description": "Secret key for the client application.",
                    "type": "string",
                    "usedInResponses": false,
                    "usedInPosts": true,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "example": "10016b6ed5a5b09be08133fa2d282636",
                    "format": "string",
                    "expectedInResponses": false
                }
            },
            "required": [],
            "id": "aclResponse"
        },
        "aclNamespace": {
            "name": "aclNamespace",
            "properties": {
                "com.experian": {
                    "name": "com.experian",
                    "description": "Namespace containing ACL objects",
                    "type": "array",
                    "usedInResponses": true,
                    "usedInPosts": false,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "isId": true,
                    "items": {
                        "type": "acl",
                        "$ref": "acl"
                    },
                    "expectedInResponses": false
                }
            },
            "required": [],
            "id": "aclNamespace"
        },
        "tagNamespace": {
            "name": "tagNamespace",
            "properties": {
                "com.experian": {
                    "name": "com.experian",
                    "description": "Namespace containing Tag objects",
                    "type": "array",
                    "usedInResponses": true,
                    "usedInPosts": false,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "isId": true,
                    "items": {
                        "type": "tag",
                        "$ref": "tag"
                    },
                    "expectedInResponses": false
                }
            },
            "required": [],
            "id": "tagNamespace"
        },
        "tagResponse": {
            "name": "tagResponse",
            "properties": {
                "username": {
                    "name": "username",
                    "description": "The email address of the user",
                    "type": "string",
                    "usedInResponses": true,
                    "usedInPosts": true,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "isId": true,
                    "example": "test@test.ccom",
                    "format": "string",
                    "expectedInResponses": false
                },
                "tag": {
                    "name": "tag",
                    "description": "Dictonary of namespaces mapping to an array of Tags for that namespace.",
                    "type": "tagNamespace",
                    "usedInResponses": true,
                    "usedInPosts": false,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "$ref": "tagNamespace",
                    "expectedInResponses": false
                },
                "blob": {
                    "name": "blob",
                    "description": "The tag object you wish to create.",
                    "type": "tag",
                    "usedInResponses": false,
                    "usedInPosts": true,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "$ref": "tag",
                    "expectedInResponses": false
                },
                "client_id": {
                    "name": "client_id",
                    "description": "The id of the client application.",
                    "type": "string",
                    "usedInResponses": false,
                    "usedInPosts": true,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "example": "1234",
                    "format": "string",
                    "expectedInResponses": false
                },
                "client_secret": {
                    "name": "client_secret",
                    "description": "Secret key for the client application.",
                    "type": "string",
                    "usedInResponses": false,
                    "usedInPosts": true,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "example": "10016b6ed5a5b09be08133fa2d282636",
                    "format": "string",
                    "expectedInResponses": false
                }
            },
            "required": [],
            "id": "tagResponse"
        },
        "client": {
            "name": "client",
            "properties": {
                "id": {
                    "name": "id",
                    "description": "The id of the client.",
                    "type": "string",
                    "usedInResponses": true,
                    "usedInPosts": true,
                    "usedInPuts": true,
                    "required": true,
                    "requiredPut": true,
                    "isId": true,
                    "example": "Alchemy Social",
                    "format": "string",
                    "expectedInResponses": false
                },
                "secret": {
                    "name": "secret",
                    "description": "The client secret for this client",
                    "type": "string",
                    "usedInResponses": false,
                    "usedInPosts": true,
                    "usedInPuts": true,
                    "required": true,
                    "requiredPut": false,
                    "example": "10016b6ed5a5b09be08133fa2d282636",
                    "format": "string",
                    "expectedInResponses": false
                },
                "client_id": {
                    "name": "client_id",
                    "description": "The id of the client application.",
                    "type": "string",
                    "usedInResponses": false,
                    "usedInPosts": true,
                    "usedInPuts": true,
                    "required": true,
                    "requiredPut": true,
                    "example": "10016b6ed5a5b09be08133fa2d282636",
                    "format": "string",
                    "expectedInResponses": false
                },
                "client_secret": {
                    "name": "client_secret",
                    "description": "Secret key for the client application.",
                    "type": "string",
                    "usedInResponses": false,
                    "usedInPosts": true,
                    "usedInPuts": true,
                    "required": true,
                    "requiredPut": true,
                    "example": "10016b6ed5a5b09be08133fa2d282636",
                    "format": "string",
                    "expectedInResponses": false
                },
                "token_type": {
                    "name": "token_type",
                    "description": "defaults to basic",
                    "type": "string",
                    "usedInResponses": true,
                    "usedInPosts": true,
                    "usedInPuts": true,
                    "required": false,
                    "requiredPut": false,
                    "enum": [
                        "basic",
                        "publickey",
                        "json"
                    ],
                    "format": "string",
                    "expectedInResponses": false
                },
                "public_key": {
                    "name": "public_key",
                    "description": "Public key PEM.  REQUIRED if token_type = publickey",
                    "type": "string",
                    "usedInResponses": true,
                    "usedInPosts": true,
                    "usedInPuts": true,
                    "required": false,
                    "requiredPut": false,
                    "format": "string",
                    "expectedInResponses": false
                },
                "key_fields": {
                    "name": "key_fields",
                    "description": "Extra fields in JSON type tokens.",
                    "type": "json",
                    "usedInResponses": true,
                    "usedInPosts": true,
                    "usedInPuts": true,
                    "required": false,
                    "requiredPut": false,
                    "$ref": "json",
                    "expectedInResponses": false
                },
                "read_namespace": {
                    "name": "read_namespace",
                    "description": "Array of regexes of namespaces the application can read.",
                    "type": "array",
                    "usedInResponses": true,
                    "usedInPosts": true,
                    "usedInPuts": true,
                    "required": false,
                    "requiredPut": false,
                    "example": "com\\.alchemysocial.*",
                    "items": {
                        "type": "string",
                        "format": "string"
                    },
                    "expectedInResponses": false
                },
                "write_namespace": {
                    "name": "write_namespace",
                    "description": "Array of regexes of namespaces the application can write to.",
                    "type": "array",
                    "usedInResponses": true,
                    "usedInPosts": true,
                    "usedInPuts": true,
                    "required": false,
                    "requiredPut": false,
                    "example": "com\\.alchemysocial.*",
                    "items": {
                        "type": "string",
                        "format": "string"
                    },
                    "expectedInResponses": false
                },
                "is_primary": {
                    "name": "is_primary",
                    "description": "Is this an app a user can log into directly, rather than using an API",
                    "type": "boolean",
                    "usedInResponses": true,
                    "usedInPosts": true,
                    "usedInPuts": true,
                    "required": false,
                    "requiredPut": false,
                    "format": "boolean",
                    "expectedInResponses": false
                },
                "can_add_client": {
                    "name": "can_add_client",
                    "description": "Can this client use client to get, create and edit other clients",
                    "type": "boolean",
                    "usedInResponses": true,
                    "usedInPosts": false,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "format": "boolean",
                    "expectedInResponses": false
                }
            },
            "required": [
                "id",
                "secret",
                "client_id",
                "client_secret"
            ],
            "id": "client"
        },
        "tokenInvalidate": {
            "name": "tokenInvalidate",
            "properties": {
                "client_id": {
                    "name": "client_id",
                    "description": "The id of the client application.",
                    "type": "string",
                    "usedInResponses": false,
                    "usedInPosts": true,
                    "usedInPuts": false,
                    "required": true,
                    "requiredPut": false,
                    "isId": true,
                    "example": "1234",
                    "format": "string",
                    "expectedInResponses": false
                },
                "client_secret": {
                    "name": "client_secret",
                    "description": "Secret key for the client application.",
                    "type": "string",
                    "usedInResponses": false,
                    "usedInPosts": true,
                    "usedInPuts": false,
                    "required": true,
                    "requiredPut": false,
                    "example": "10016b6ed5a5b09be08133fa2d282636",
                    "format": "string",
                    "expectedInResponses": false
                },
                "access_token": {
                    "name": "access_token",
                    "description": "The users access token.",
                    "type": "string",
                    "usedInResponses": false,
                    "usedInPosts": true,
                    "usedInPuts": false,
                    "required": true,
                    "requiredPut": false,
                    "example": "bb302c9b5204d593ba3657055842a5fb",
                    "format": "string",
                    "expectedInResponses": false
                }
            },
            "required": [
                "client_id",
                "client_secret",
                "access_token"
            ],
            "id": "tokenInvalidate"
        },
        "tokenSuccess": {
            "name": "tokenSuccess",
            "properties": {
                "user_id": {
                    "name": "user_id",
                    "description": "The id of the user who this token belongs to.",
                    "type": "string",
                    "usedInResponses": true,
                    "expectedInResponses": false,
                    "usedInPosts": false,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "isId": true,
                    "example": "test@test.com",
                    "format": "string"
                },
                "username": {
                    "name": "username",
                    "description": "The username of the user.",
                    "type": "string",
                    "usedInResponses": true,
                    "expectedInResponses": false,
                    "usedInPosts": false,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "example": "test@test.com",
                    "format": "string"
                },
                "owner": {
                    "name": "owner",
                    "description": "The client that owns this toke.",
                    "type": "string",
                    "usedInResponses": true,
                    "expectedInResponses": false,
                    "usedInPosts": false,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "example": "",
                    "format": "string"
                },
                "valid": {
                    "name": "valid",
                    "description": "Was the token valid",
                    "type": "boolean",
                    "usedInResponses": true,
                    "expectedInResponses": true,
                    "usedInPosts": false,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "example": true,
                    "format": "boolean"
                },
                "expires": {
                    "name": "expires",
                    "description": "Unix timestamp at which the token expires if not used.",
                    "type": "integer",
                    "usedInResponses": true,
                    "expectedInResponses": true,
                    "usedInPosts": false,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "format": "int64"
                },
                "expires_in": {
                    "name": "expires_in",
                    "description": "How many seconds until the token expires",
                    "type": "string",
                    "usedInResponses": true,
                    "expectedInResponses": true,
                    "usedInPosts": false,
                    "usedInPuts": false,
                    "required": false,
                    "requiredPut": false,
                    "example": "7200",
                    "format": "string"
                }
            },
            "required": []
        }
    },
    "swaggerVersion": "1.2",
    "produces": [
        "application/json"
    ],
    "resourcePath": "",
    "envelope": {
        "mainParam": "data",
        "properties": {
            "data": {
                "name": "data",
                "description": "The main response",
                "type": "user",
                "$ref": "user",
                "required": false,
                "main": true,
                "usedInResponses": true,
                "expectedInResponses": false,
                "usedInPuts": false,
                "usedInPosts": false
            },
            "error": {
                "name": "error",
                "description": "Error data",
                "type": "error",
                "$ref": "error",
                "required": false,
                "usedInResponses": true,
                "expectedInResponses": false,
                "usedInPuts": false,
                "usedInPosts": false
            }
        }
    },
    "parameters": [],
    "envelopeIsUsed": false,
    "responseMessages": [
        {
            "code": 200,
            "summary": "OK",
            "reason": "Request completed successfully."
        },
        {
            "code": 400,
            "summary": "Bad Request",
            "reason": "Something was wrong with the request, incorrect parameters.",
            "responseModel": "error"
        },
        {
            "code": 401,
            "summary": "Unauthorized",
            "reason": "Not authorised to access the requested data.",
            "responseModel": "error"
        },
        {
            "code": 403,
            "summary": "Forbidden",
            "reason": "Authentication failed.",
            "responseModel": "error"
        },
        {
            "code": 404,
            "summary": "Not Found",
            "reason": "The method doesn't exist.",
            "responseModel": "error"
        },
        {
            "code": 429,
            "summary": "Rate Limited",
            "reason": "You have exceeded your usage quota and your request has been rate limited.",
            "responseModel": "error"
        },
        {
            "code": 500,
            "summary": "Internal Server Error",
            "reason": "Something went wrong with the server.",
            "responseModel": "error"
        }
    ],
    "info": {
        "title": "oAuth Server API",
        "description": "API for interacting with our OAuth server",
        "notes": "This API is used to authenticate user for other services, and for users with sufficient levels of access to manage users, roles, and their permisssions.\n\n### Two legged authentication ###\nTwo legged authentication (username and password form) is performed by POSTing to the /token end point.\n\n### Three legged authentication ###\nThree legged authentication is achieved using the auth server's login popup.\n\nFirst open up a popup window and supply your client id and redirect uri:\n\n[https://oauth.alchemysocial.com/oauth/login?response\\_type=code&client\\_id={YOUR\\_CLIENT\\_ID}&redirect_uri={THE\\_PAGE\\_TO\\_REDIRECT\\_TO}](https://oauth.alchemysocial.com/oauth/login?response_type=code&client\\_id={YOUR\\_CLIENT\\_ID}&redirect\\_uri={THE\\_PAGE\\_TO\\_REDIRECT\\_TO})\n\nOn successful login, the user will be redirected to your 'redirect_uri', the querystring will contain a prameter 'code' containing an authorisation code, which needs to be exchanged for an access token.\n\nTo exchange the auth code for an access token POST to the /token end point with a grant\\_type of 'authorization\\_code'.",
        "termsOfServiceUrl": "",
        "contact": "",
        "license": "",
        "licenseUrl": ""
    },
    "authorizations": {
        "supports": {
            "oauth2Implicit": true,
            "oauth2AuthorizationCode": false
        },
        "oauth2": {
            "type": "oauth2",
            "scopes": [],
            "grantTypes": {
                "implicit": {
                    "loginEndpoint": {
                        "url": "https://oauth.alchemysocial.com/token"
                    },
                    "tokenName": "accessToken"
                },
                "authorization_code": {
                    "tokenRequestEndpoint": {
                        "url": "",
                        "clientIdName": "client_id",
                        "clientSecretName": "client_secret"
                    },
                    "tokenEndpoint": {
                        "url": "",
                        "tokenName": "access_code"
                    }
                }
            }
        }
    },
    "jsonp": {
        "supported": false,
        "callbackParameter": "jsonp",
        "methodParameter": "method",
        "always200": true,
        "errorModel": "error"
    }
}